<?php

/* Задание #1
1. Функция должна принимать массив строк и выводить каждую строку в
отдельном параграфе (тег <p>)
2. Если в функцию передан второй параметр true, то возвращать (через return)
результат в виде одной объединенной строки. */
echo "<h2>Задание #1</h2>";

$strongCountries = [United_States_of_America, Russia, Germany, Britannia, France, China, India, Japan];

function task1($strings, $bool = FALSE)
{

    if ($bool == FALSE) {
        foreach ($strings as $item) {
            echo "<p>$item</p>";
        }
    } else {
        $arrString = implode(",", $strings);
        return $arrString;
    }

}

echo "<h3>Выводим параграфом:</h3>";
task1($strongCountries);

echo "<h3>Массив в одной строке</h3>";
echo task1($strongCountries, 4);

echo "<br /><hr>";
//==============================================================================================
/* Задание #2
1. Функция должна принимать 2 параметра:
a. массив чисел;
b. строку, обозначающую арифметическое действие, которое нужно
выполнить со всеми элементами массива.
2. Функция должна вывести результат на экран.
3. Функция должна обрабатывать любой ввод, в том числе некорректный и
выдавать сообщения об этом  */
echo "<h2>Задание #2</h2>";

$numbers2 = [1, 2, 3, 4, 5, 6, 7, 8, 9];
$operator2 = '+';

function task2($arr, $calc)
{
    echo implode($arr, $calc) . ' = ';
    $count = 0;
    foreach ($arr as $k => $item) {
        if ($k > 0) {
            switch ($calc) {
                case '-':
                    $count -= $item;
                    break;

                case '+':
                    $count += $item;
                    break;

                case '*':
                    $count *= $item;
                    break;

                case '/':
                    $count /= $item;
                    break;

            }
        } else {
            $count = $item;
        }
    }
    echo $count;
}

task2($numbers2, $operator2);


echo "<br />";

echo "<h4>Арифметическая операция с разными операторами:</h4>";
function calculator($array, $operator = ['+'])
{
    if (!(in_array('/', $operator) && in_array(0, $array))) {            // Проверка деления на ноль
        foreach ($operator as $symbol) {
            $result = '';
            foreach ($array as $number) {
                $result .= $number . $symbol;                            // Составляем строку выражения
            }
            $result = substr($result, 0, -1);                            // Удаление последнего знака
            $evaluate = eval("return($result);");                        // Исполнение выражения в строке
            echo 'Результат: ' . $result . ' = ' . $evaluate . "</br>";  // Вывод результата
        }
    } else {
        echo "Деление на ноль невозможно!";
    }
}

$numbers = [5, 10, 15, 20];
$operators = ['+', '-', '*', '/'];
calculator($numbers, $operators);

echo "<br /><hr>";
//=====================================================================================================
//======================================================================================================
echo "<h2>Задание #3</h2>";
/*1. Функция должна принимать переменное число аргументов.
2. Первым аргументом обязательно должна быть строка, обозначающая
арифметическое действие, которое необходимо выполнить со всеми
передаваемыми аргументами.
3. Остальные аргументы это целые и/или вещественные числа.
Пример вызова: calcEverything('+', 1, 2, 3, 5.2);
Результат: 1 + 2 + 3 + 5.2 = 11.2 */

function task3($str)
{
    if (is_string($str)) {
        if (in_array($str, array('-', '+', '/', '*'))) { //Проверка на присутствие значения в массиве
            $arr = func_get_args();//Возвращаем массив, содержащий аргументы функции
            $z = $arr[0];
            array_shift($arr); //Извлекает первый элемент массива
            task2($arr, $z); // Используем функцию из предыдужего задания
        } else {
            echo 'Первый аргумент не является знаком: - + / *';
            return;
        }
    } else {
        echo 'Первый аргумент не строка';
        return;
    }
}

task3('-', 1, 2, 3, 4);

echo "<hr><br>";
//================================================================================================
//=================================================================================================

echo "<h2>Задание #4</h2>";
/* 1. Функция должна принимать два параметра – целые числа.
2. Если в функцию передали 2 целых числа, то функция должна отобразить
таблицу умножения размером со значения параметров, переданных в функцию.
(Например если передано 8 и 8, то нарисовать от 1х1 до 8х8). Таблица должна
быть выполнена с использованием тега <table>
3. В остальных случаях выдавать корректную ошибку. */

function task4($cols, $rows)
{
    if (is_int($cols) && is_int($rows)) {                              // Проверка  на целочисленность
        echo "<table><tr>";
        for ($i = 1; $i <= $rows; $i++) {                              // Счетчик строк
            for ($j = 1; $j <= $cols; $j++) {                          // Счетчик колонок
                echo "<td>" . '&nbsp' . ($i * $j) . '&nbsp' . "</td>";  // Создаем ячейки
            }
            if ($i != $rows) {
                echo "</tr><tr>";                                      // Закрытие строк
            }
        }
        echo "</tr></table>";
    } else {
        echo "Введите два целочисленные числа!";
    }
}

task4(4, 5);
echo "<br />";
function task4finish()
{
    $columns = random_int(5, 20);
    $rows = random_int(13, 20);
    task4($columns, $rows);
}

//task4finish();

echo "<hr><br>";
//=========================================================================================================
//==========================================================================================================
echo "<h2>Задание #5</h2>";
/* 1. Написать две функции.
2. Функция №1 принимает 1 строковый параметр и возвращает true если строка
является палиндромом*, false в противном случае. Пробелы и регистр не
должны учитываться.
3. Функция №2 выводит сообщение в котором на русском языке оговаривается
результат из функции №1
* Палиндром – строка, одинаково читающаяся в обоих направлениях. */

function utf8_strrev($str)
{
    preg_match_all('/./us', $str, $ar);
    return join('', array_reverse($ar[0]));
}

function task5($str)
{
    $str = mb_strtolower($str);
    $str = str_replace(" ", " ", $str);
    $str_reverse = utf8_strrev($str);
    if ($str != $str_reverse) {
        return false;
    }
    return true;
}

function task6($str)
{
    if (task5($str) == true) {
        echo 'Строка является палиндромом';
    } elseif (task5($str) == false) {
        echo 'Строка НЕ является палиндромом';
    } else {
        echo 'Переданные аргумент не строка';
    }
}

task6(ghfgh);

echo "<hr><br>";
//====================================================================================================
//=========================================================================================================
echo "<h2>Задание #6 (выполняется после вебинара “​ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)</h2>";

//1. Выведите информацию о текущей дате в формате 31.12.2016 23:59
echo "<h4>1. Выведите информацию о текущей дате в формате 31.12.2016 23:59</h4>";

echo date("d.m.Y G:i") . "<br />";
// d -День месяца, 2 цифры с ведущим нулём
// m -Порядковый номер месяца с ведущим нулём
// Y -Порядковый номер года, 4 цифры
// G -Часы в 24-часовом формате без ведущего нуля
// i -Минуты с ведущим нулём

//2. Выведите unixtime время соответствующее 24.02.2016 00:00:00.
echo "<h4>2. Выведите unixtime время соответствующее 24.02.2016 00:00:00.</h4>";

echo date('d.m.Y H:i:s') . "<br />";
// H -Часы в 24-часовом формате с ведущим нулём
// s -Секунды с ведущим нулём

echo "<hr><br>";
//=========================================================================================================
//===========================================================================================================
echo "<h2>Задание #7 (выполняется после вебинара “​ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)</h2>";
/* 1. Дана строка: “Карл у Клары украл Кораллы”. удалить из этой строки все
заглавные буквы “К” */

echo "<h4>1. Дана строка: “Карл у Клары украл Кораллы”. удалить из этой строки все
заглавные буквы “К”</h4>";

echo $str1 = "Карл у Клары украл Кораллы <br />";
echo str_replace('К', '', $str1) . "<br />";

echo "<h4>2. Дана строка “Две бутылки лимонада”. Заменить “Две”, на “Три”. По желанию
дополнить задание</h4>";

echo $str2 = "Две бутылки лимонада <br />";
echo str_replace('Две', 'Три', $str2) . "<br />";

echo "<hr><br>";
//==========================================================================================================
//=====================================================================================================
echo "<h2>Задание #8 (выполняется после вебинара “​ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)</h2>";
/*1. Создайте средствами ОС (в ручную) файл test.txt и поместите в него текст
“Hello, world”
2. Напишите функцию, которая будет принимать имя файла, открывать файл и
выводить содержимое на экран.*/
//fopen,
$nameFile = 'test.txt';
function read_file($nameFile)
{
    $get = fopen($nameFile, 'r');
    echo file_get_contents($nameFile, true);
}

read_file($nameFile);

echo "<hr><br>";
//==========================================================================================================
//=====================================================================================================
echo "<h2>Задание #9 (выполняется после вебинара “​ВСТРОЕННЫЕ ВОЗМОЖНОСТИ ЯЗЫКА”)</h2>";
/* 1. Создайте файл anothertest.txt средствами PHP. Поместите в него текст - “Hello
again!” */
$put = fopen('anothertest.txt', w); //создаём файл
fwrite($put, 'Hello Again!'); // записываем в него текст
fclose($put); // закрываем файл









